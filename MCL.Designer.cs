//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MCLModel", "FK_Game_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.User), "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.Game), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_PlayerGame_Game", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.Game), "PlayerGame", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.PlayerGame), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_SeasonMaster_Game", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.Game), "LeagueMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.LeagueMaster), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_GamingSeason_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.User), "League", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.League), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_PlayerMaster_GamingSeason", "League", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.League), "PlayerMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.PlayerMaster), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_Rank_League", "League", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.League), "Rank", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.Rank), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_SeasonMaster_GamingSeason", "League", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.League), "LeagueMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.LeagueMaster), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_JudgesMaster_JudgesMaster", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.User), "LeagueJudge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.LeagueJudge), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_JudgesMaster_SeasonMaster", "LeagueMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.LeagueMaster), "LeagueJudge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.LeagueJudge), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_PlayerMaster_Player", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.Player), "PlayerMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.PlayerMaster), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_PlayerGame_Result", "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.Result), "PlayerGame", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.PlayerGame), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_PlayerGame_Tier", "Tier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.Tier), "PlayerGame", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.PlayerGame), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_PlayerGame_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.User), "PlayerGame", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.PlayerGame), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_Recording_PlayerMaster", "PlayerMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.PlayerMaster), "PlayerGame", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.PlayerGame), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_PlayerMaster_Tier", "Tier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.Tier), "PlayerMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.PlayerMaster), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_Tier_Rank", "Rank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ManCaveProject.Rank), "Tier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.Tier), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_Tier_TierType", "TierType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.TierType), "Tier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.Tier), true)]
[assembly: EdmRelationshipAttribute("MCLModel", "FK_User_UserType", "UserType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ManCaveProject.UserType), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ManCaveProject.User), true)]

#endregion

namespace ManCaveProject
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MCLEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MCLEntities object using the connection string found in the 'MCLEntities' section of the application configuration file.
        /// </summary>
        public MCLEntities() : base("name=MCLEntities", "MCLEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MCLEntities object.
        /// </summary>
        public MCLEntities(string connectionString) : base(connectionString, "MCLEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MCLEntities object.
        /// </summary>
        public MCLEntities(EntityConnection connection) : base(connection, "MCLEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<League> Leagues
        {
            get
            {
                if ((_Leagues == null))
                {
                    _Leagues = base.CreateObjectSet<League>("Leagues");
                }
                return _Leagues;
            }
        }
        private ObjectSet<League> _Leagues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeagueJudge> LeagueJudges
        {
            get
            {
                if ((_LeagueJudges == null))
                {
                    _LeagueJudges = base.CreateObjectSet<LeagueJudge>("LeagueJudges");
                }
                return _LeagueJudges;
            }
        }
        private ObjectSet<LeagueJudge> _LeagueJudges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeagueMaster> LeagueMasters
        {
            get
            {
                if ((_LeagueMasters == null))
                {
                    _LeagueMasters = base.CreateObjectSet<LeagueMaster>("LeagueMasters");
                }
                return _LeagueMasters;
            }
        }
        private ObjectSet<LeagueMaster> _LeagueMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayerGame> PlayerGames
        {
            get
            {
                if ((_PlayerGames == null))
                {
                    _PlayerGames = base.CreateObjectSet<PlayerGame>("PlayerGames");
                }
                return _PlayerGames;
            }
        }
        private ObjectSet<PlayerGame> _PlayerGames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayerMaster> PlayerMasters
        {
            get
            {
                if ((_PlayerMasters == null))
                {
                    _PlayerMasters = base.CreateObjectSet<PlayerMaster>("PlayerMasters");
                }
                return _PlayerMasters;
            }
        }
        private ObjectSet<PlayerMaster> _PlayerMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rank> Ranks
        {
            get
            {
                if ((_Ranks == null))
                {
                    _Ranks = base.CreateObjectSet<Rank>("Ranks");
                }
                return _Ranks;
            }
        }
        private ObjectSet<Rank> _Ranks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Result> Results
        {
            get
            {
                if ((_Results == null))
                {
                    _Results = base.CreateObjectSet<Result>("Results");
                }
                return _Results;
            }
        }
        private ObjectSet<Result> _Results;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tier> Tiers
        {
            get
            {
                if ((_Tiers == null))
                {
                    _Tiers = base.CreateObjectSet<Tier>("Tiers");
                }
                return _Tiers;
            }
        }
        private ObjectSet<Tier> _Tiers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TierType> TierTypes
        {
            get
            {
                if ((_TierTypes == null))
                {
                    _TierTypes = base.CreateObjectSet<TierType>("TierTypes");
                }
                return _TierTypes;
            }
        }
        private ObjectSet<TierType> _TierTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserType> UserTypes
        {
            get
            {
                if ((_UserTypes == null))
                {
                    _UserTypes = base.CreateObjectSet<UserType>("UserTypes");
                }
                return _UserTypes;
            }
        }
        private ObjectSet<UserType> _UserTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<View_AllGames> View_AllGames
        {
            get
            {
                if ((_View_AllGames == null))
                {
                    _View_AllGames = base.CreateObjectSet<View_AllGames>("View_AllGames");
                }
                return _View_AllGames;
            }
        }
        private ObjectSet<View_AllGames> _View_AllGames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<View_AllJudges> View_AllJudges
        {
            get
            {
                if ((_View_AllJudges == null))
                {
                    _View_AllJudges = base.CreateObjectSet<View_AllJudges>("View_AllJudges");
                }
                return _View_AllJudges;
            }
        }
        private ObjectSet<View_AllJudges> _View_AllJudges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<View_AllLegueRules> View_AllLegueRules
        {
            get
            {
                if ((_View_AllLegueRules == null))
                {
                    _View_AllLegueRules = base.CreateObjectSet<View_AllLegueRules>("View_AllLegueRules");
                }
                return _View_AllLegueRules;
            }
        }
        private ObjectSet<View_AllLegueRules> _View_AllLegueRules;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leagues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeagues(League league)
        {
            base.AddObject("Leagues", league);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeagueJudges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeagueJudges(LeagueJudge leagueJudge)
        {
            base.AddObject("LeagueJudges", leagueJudge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeagueMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeagueMasters(LeagueMaster leagueMaster)
        {
            base.AddObject("LeagueMasters", leagueMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayerGames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayerGames(PlayerGame playerGame)
        {
            base.AddObject("PlayerGames", playerGame);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayerMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayerMasters(PlayerMaster playerMaster)
        {
            base.AddObject("PlayerMasters", playerMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ranks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRanks(Rank rank)
        {
            base.AddObject("Ranks", rank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Results EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResults(Result result)
        {
            base.AddObject("Results", result);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tiers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTiers(Tier tier)
        {
            base.AddObject("Tiers", tier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TierTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTierTypes(TierType tierType)
        {
            base.AddObject("TierTypes", tierType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserTypes(UserType userType)
        {
            base.AddObject("UserTypes", userType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the View_AllGames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToView_AllGames(View_AllGames view_AllGames)
        {
            base.AddObject("View_AllGames", view_AllGames);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the View_AllJudges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToView_AllJudges(View_AllJudges view_AllJudges)
        {
            base.AddObject("View_AllJudges", view_AllJudges);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the View_AllLegueRules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToView_AllLegueRules(View_AllLegueRules view_AllLegueRules)
        {
            base.AddObject("View_AllLegueRules", view_AllLegueRules);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Game object.
        /// </summary>
        /// <param name="gameId">Initial value of the GameId property.</param>
        public static Game CreateGame(global::System.Int32 gameId)
        {
            Game game = new Game();
            game.GameId = gameId;
            return game;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                if (_GameId != value)
                {
                    OnGameIdChanging(value);
                    ReportPropertyChanging("GameId");
                    _GameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameId");
                    OnGameIdChanged();
                }
            }
        }
        private global::System.Int32 _GameId;
        partial void OnGameIdChanging(global::System.Int32 value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_Game_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MCLModel.FK_Game_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MCLModel.FK_Game_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MCLModel.FK_Game_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MCLModel.FK_Game_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerGame_Game", "PlayerGame")]
        public EntityCollection<PlayerGame> PlayerGames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerGame>("MCLModel.FK_PlayerGame_Game", "PlayerGame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerGame>("MCLModel.FK_PlayerGame_Game", "PlayerGame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_SeasonMaster_Game", "LeagueMaster")]
        public EntityCollection<LeagueMaster> LeagueMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeagueMaster>("MCLModel.FK_SeasonMaster_Game", "LeagueMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeagueMaster>("MCLModel.FK_SeasonMaster_Game", "LeagueMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="League")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class League : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new League object.
        /// </summary>
        /// <param name="leagueId">Initial value of the LeagueId property.</param>
        public static League CreateLeague(global::System.Int32 leagueId)
        {
            League league = new League();
            league.LeagueId = leagueId;
            return league;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                if (_LeagueId != value)
                {
                    OnLeagueIdChanging(value);
                    ReportPropertyChanging("LeagueId");
                    _LeagueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeagueId");
                    OnLeagueIdChanged();
                }
            }
        }
        private global::System.Int32 _LeagueId;
        partial void OnLeagueIdChanging(global::System.Int32 value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_GamingSeason_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MCLModel.FK_GamingSeason_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MCLModel.FK_GamingSeason_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MCLModel.FK_GamingSeason_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MCLModel.FK_GamingSeason_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerMaster_GamingSeason", "PlayerMaster")]
        public EntityCollection<PlayerMaster> PlayerMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerMaster>("MCLModel.FK_PlayerMaster_GamingSeason", "PlayerMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerMaster>("MCLModel.FK_PlayerMaster_GamingSeason", "PlayerMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_Rank_League", "Rank")]
        public EntityCollection<Rank> Ranks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rank>("MCLModel.FK_Rank_League", "Rank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rank>("MCLModel.FK_Rank_League", "Rank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_SeasonMaster_GamingSeason", "LeagueMaster")]
        public EntityCollection<LeagueMaster> LeagueMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeagueMaster>("MCLModel.FK_SeasonMaster_GamingSeason", "LeagueMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeagueMaster>("MCLModel.FK_SeasonMaster_GamingSeason", "LeagueMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="LeagueJudge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeagueJudge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeagueJudge object.
        /// </summary>
        /// <param name="leagueJudgeId">Initial value of the LeagueJudgeId property.</param>
        public static LeagueJudge CreateLeagueJudge(global::System.Int32 leagueJudgeId)
        {
            LeagueJudge leagueJudge = new LeagueJudge();
            leagueJudge.LeagueJudgeId = leagueJudgeId;
            return leagueJudge;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueJudgeId
        {
            get
            {
                return _LeagueJudgeId;
            }
            set
            {
                if (_LeagueJudgeId != value)
                {
                    OnLeagueJudgeIdChanging(value);
                    ReportPropertyChanging("LeagueJudgeId");
                    _LeagueJudgeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeagueJudgeId");
                    OnLeagueJudgeIdChanged();
                }
            }
        }
        private global::System.Int32 _LeagueJudgeId;
        partial void OnLeagueJudgeIdChanging(global::System.Int32 value);
        partial void OnLeagueJudgeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeagueMasterId
        {
            get
            {
                return _LeagueMasterId;
            }
            set
            {
                OnLeagueMasterIdChanging(value);
                ReportPropertyChanging("LeagueMasterId");
                _LeagueMasterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueMasterId");
                OnLeagueMasterIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeagueMasterId;
        partial void OnLeagueMasterIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeagueMasterIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_JudgesMaster_JudgesMaster", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MCLModel.FK_JudgesMaster_JudgesMaster", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MCLModel.FK_JudgesMaster_JudgesMaster", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MCLModel.FK_JudgesMaster_JudgesMaster", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MCLModel.FK_JudgesMaster_JudgesMaster", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_JudgesMaster_SeasonMaster", "LeagueMaster")]
        public LeagueMaster LeagueMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeagueMaster>("MCLModel.FK_JudgesMaster_SeasonMaster", "LeagueMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeagueMaster>("MCLModel.FK_JudgesMaster_SeasonMaster", "LeagueMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeagueMaster> LeagueMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeagueMaster>("MCLModel.FK_JudgesMaster_SeasonMaster", "LeagueMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeagueMaster>("MCLModel.FK_JudgesMaster_SeasonMaster", "LeagueMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="LeagueMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeagueMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeagueMaster object.
        /// </summary>
        /// <param name="leagueMasterId">Initial value of the LeagueMasterId property.</param>
        public static LeagueMaster CreateLeagueMaster(global::System.Int32 leagueMasterId)
        {
            LeagueMaster leagueMaster = new LeagueMaster();
            leagueMaster.LeagueMasterId = leagueMasterId;
            return leagueMaster;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueMasterId
        {
            get
            {
                return _LeagueMasterId;
            }
            set
            {
                if (_LeagueMasterId != value)
                {
                    OnLeagueMasterIdChanging(value);
                    ReportPropertyChanging("LeagueMasterId");
                    _LeagueMasterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeagueMasterId");
                    OnLeagueMasterIdChanged();
                }
            }
        }
        private global::System.Int32 _LeagueMasterId;
        partial void OnLeagueMasterIdChanging(global::System.Int32 value);
        partial void OnLeagueMasterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                OnLeagueIdChanging(value);
                ReportPropertyChanging("LeagueId");
                _LeagueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueId");
                OnLeagueIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeagueId;
        partial void OnLeagueIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                OnGameIdChanging(value);
                ReportPropertyChanging("GameId");
                _GameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameId");
                OnGameIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GameId;
        partial void OnGameIdChanging(Nullable<global::System.Int32> value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WinPoints
        {
            get
            {
                return _WinPoints;
            }
            set
            {
                OnWinPointsChanging(value);
                ReportPropertyChanging("WinPoints");
                _WinPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WinPoints");
                OnWinPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _WinPoints;
        partial void OnWinPointsChanging(Nullable<global::System.Int32> value);
        partial void OnWinPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LoosePoints
        {
            get
            {
                return _LoosePoints;
            }
            set
            {
                OnLoosePointsChanging(value);
                ReportPropertyChanging("LoosePoints");
                _LoosePoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoosePoints");
                OnLoosePointsChanged();
            }
        }
        private Nullable<global::System.Int32> _LoosePoints;
        partial void OnLoosePointsChanging(Nullable<global::System.Int32> value);
        partial void OnLoosePointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TiePoints
        {
            get
            {
                return _TiePoints;
            }
            set
            {
                OnTiePointsChanging(value);
                ReportPropertyChanging("TiePoints");
                _TiePoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TiePoints");
                OnTiePointsChanged();
            }
        }
        private Nullable<global::System.Int32> _TiePoints;
        partial void OnTiePointsChanging(Nullable<global::System.Int32> value);
        partial void OnTiePointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvalidPoints
        {
            get
            {
                return _InvalidPoints;
            }
            set
            {
                OnInvalidPointsChanging(value);
                ReportPropertyChanging("InvalidPoints");
                _InvalidPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvalidPoints");
                OnInvalidPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _InvalidPoints;
        partial void OnInvalidPointsChanging(Nullable<global::System.Int32> value);
        partial void OnInvalidPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaximumGamePlayTime
        {
            get
            {
                return _MaximumGamePlayTime;
            }
            set
            {
                OnMaximumGamePlayTimeChanging(value);
                ReportPropertyChanging("MaximumGamePlayTime");
                _MaximumGamePlayTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaximumGamePlayTime");
                OnMaximumGamePlayTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _MaximumGamePlayTime;
        partial void OnMaximumGamePlayTimeChanging(Nullable<global::System.Int32> value);
        partial void OnMaximumGamePlayTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_SeasonMaster_Game", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("MCLModel.FK_SeasonMaster_Game", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("MCLModel.FK_SeasonMaster_Game", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("MCLModel.FK_SeasonMaster_Game", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("MCLModel.FK_SeasonMaster_Game", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_SeasonMaster_GamingSeason", "League")]
        public League League
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("MCLModel.FK_SeasonMaster_GamingSeason", "League").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("MCLModel.FK_SeasonMaster_GamingSeason", "League").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<League> LeagueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("MCLModel.FK_SeasonMaster_GamingSeason", "League");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<League>("MCLModel.FK_SeasonMaster_GamingSeason", "League", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_JudgesMaster_SeasonMaster", "LeagueJudge")]
        public EntityCollection<LeagueJudge> LeagueJudges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeagueJudge>("MCLModel.FK_JudgesMaster_SeasonMaster", "LeagueJudge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeagueJudge>("MCLModel.FK_JudgesMaster_SeasonMaster", "LeagueJudge", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="playerId">Initial value of the PlayerId property.</param>
        public static Player CreatePlayer(global::System.Int32 playerId)
        {
            Player player = new Player();
            player.PlayerId = playerId;
            return player;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                if (_PlayerId != value)
                {
                    OnPlayerIdChanging(value);
                    ReportPropertyChanging("PlayerId");
                    _PlayerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayerId");
                    OnPlayerIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayerId;
        partial void OnPlayerIdChanging(global::System.Int32 value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlayerName
        {
            get
            {
                return _PlayerName;
            }
            set
            {
                OnPlayerNameChanging(value);
                ReportPropertyChanging("PlayerName");
                _PlayerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlayerName");
                OnPlayerNameChanged();
            }
        }
        private global::System.String _PlayerName;
        partial void OnPlayerNameChanging(global::System.String value);
        partial void OnPlayerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlayerUserId
        {
            get
            {
                return _PlayerUserId;
            }
            set
            {
                OnPlayerUserIdChanging(value);
                ReportPropertyChanging("PlayerUserId");
                _PlayerUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerUserId");
                OnPlayerUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PlayerUserId;
        partial void OnPlayerUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnPlayerUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SmartLaunchDBId
        {
            get
            {
                return _SmartLaunchDBId;
            }
            set
            {
                OnSmartLaunchDBIdChanging(value);
                ReportPropertyChanging("SmartLaunchDBId");
                _SmartLaunchDBId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SmartLaunchDBId");
                OnSmartLaunchDBIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SmartLaunchDBId;
        partial void OnSmartLaunchDBIdChanging(Nullable<global::System.Int32> value);
        partial void OnSmartLaunchDBIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerMaster_Player", "PlayerMaster")]
        public EntityCollection<PlayerMaster> PlayerMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerMaster>("MCLModel.FK_PlayerMaster_Player", "PlayerMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerMaster>("MCLModel.FK_PlayerMaster_Player", "PlayerMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="PlayerGame")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayerGame : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayerGame object.
        /// </summary>
        /// <param name="playerGameId">Initial value of the PlayerGameId property.</param>
        public static PlayerGame CreatePlayerGame(global::System.Int32 playerGameId)
        {
            PlayerGame playerGame = new PlayerGame();
            playerGame.PlayerGameId = playerGameId;
            return playerGame;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerGameId
        {
            get
            {
                return _PlayerGameId;
            }
            set
            {
                if (_PlayerGameId != value)
                {
                    OnPlayerGameIdChanging(value);
                    ReportPropertyChanging("PlayerGameId");
                    _PlayerGameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayerGameId");
                    OnPlayerGameIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayerGameId;
        partial void OnPlayerGameIdChanging(global::System.Int32 value);
        partial void OnPlayerGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlayerMasterId
        {
            get
            {
                return _PlayerMasterId;
            }
            set
            {
                OnPlayerMasterIdChanging(value);
                ReportPropertyChanging("PlayerMasterId");
                _PlayerMasterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerMasterId");
                OnPlayerMasterIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PlayerMasterId;
        partial void OnPlayerMasterIdChanging(Nullable<global::System.Int32> value);
        partial void OnPlayerMasterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecordingFileName
        {
            get
            {
                return _RecordingFileName;
            }
            set
            {
                OnRecordingFileNameChanging(value);
                ReportPropertyChanging("RecordingFileName");
                _RecordingFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecordingFileName");
                OnRecordingFileNameChanged();
            }
        }
        private global::System.String _RecordingFileName;
        partial void OnRecordingFileNameChanging(global::System.String value);
        partial void OnRecordingFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GameStartTime
        {
            get
            {
                return _GameStartTime;
            }
            set
            {
                OnGameStartTimeChanging(value);
                ReportPropertyChanging("GameStartTime");
                _GameStartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameStartTime");
                OnGameStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _GameStartTime;
        partial void OnGameStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnGameStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GameEndTime
        {
            get
            {
                return _GameEndTime;
            }
            set
            {
                OnGameEndTimeChanging(value);
                ReportPropertyChanging("GameEndTime");
                _GameEndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameEndTime");
                OnGameEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _GameEndTime;
        partial void OnGameEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnGameEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                OnGameIdChanging(value);
                ReportPropertyChanging("GameId");
                _GameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameId");
                OnGameIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GameId;
        partial void OnGameIdChanging(Nullable<global::System.Int32> value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TierId
        {
            get
            {
                return _TierId;
            }
            set
            {
                OnTierIdChanging(value);
                ReportPropertyChanging("TierId");
                _TierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TierId");
                OnTierIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TierId;
        partial void OnTierIdChanging(Nullable<global::System.Int32> value);
        partial void OnTierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResultId
        {
            get
            {
                return _ResultId;
            }
            set
            {
                OnResultIdChanging(value);
                ReportPropertyChanging("ResultId");
                _ResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultId");
                OnResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ResultId;
        partial void OnResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GamePoints
        {
            get
            {
                return _GamePoints;
            }
            set
            {
                OnGamePointsChanging(value);
                ReportPropertyChanging("GamePoints");
                _GamePoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GamePoints");
                OnGamePointsChanged();
            }
        }
        private Nullable<global::System.Int32> _GamePoints;
        partial void OnGamePointsChanging(Nullable<global::System.Int32> value);
        partial void OnGamePointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsMarked
        {
            get
            {
                return _IsMarked;
            }
            set
            {
                OnIsMarkedChanging(value);
                ReportPropertyChanging("IsMarked");
                _IsMarked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMarked");
                OnIsMarkedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsMarked;
        partial void OnIsMarkedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsMarkedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MarkedById
        {
            get
            {
                return _MarkedById;
            }
            set
            {
                OnMarkedByIdChanging(value);
                ReportPropertyChanging("MarkedById");
                _MarkedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarkedById");
                OnMarkedByIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MarkedById;
        partial void OnMarkedByIdChanging(Nullable<global::System.Int32> value);
        partial void OnMarkedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarkedAt
        {
            get
            {
                return _MarkedAt;
            }
            set
            {
                OnMarkedAtChanging(value);
                ReportPropertyChanging("MarkedAt");
                _MarkedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarkedAt");
                OnMarkedAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarkedAt;
        partial void OnMarkedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnMarkedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConsoleName
        {
            get
            {
                return _ConsoleName;
            }
            set
            {
                OnConsoleNameChanging(value);
                ReportPropertyChanging("ConsoleName");
                _ConsoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConsoleName");
                OnConsoleNameChanged();
            }
        }
        private global::System.String _ConsoleName;
        partial void OnConsoleNameChanging(global::System.String value);
        partial void OnConsoleNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerGame_Game", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("MCLModel.FK_PlayerGame_Game", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("MCLModel.FK_PlayerGame_Game", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("MCLModel.FK_PlayerGame_Game", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("MCLModel.FK_PlayerGame_Game", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerGame_Result", "Result")]
        public Result Result
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Result>("MCLModel.FK_PlayerGame_Result", "Result").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Result>("MCLModel.FK_PlayerGame_Result", "Result").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Result> ResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Result>("MCLModel.FK_PlayerGame_Result", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Result>("MCLModel.FK_PlayerGame_Result", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerGame_Tier", "Tier")]
        public Tier Tier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tier>("MCLModel.FK_PlayerGame_Tier", "Tier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tier>("MCLModel.FK_PlayerGame_Tier", "Tier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tier> TierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tier>("MCLModel.FK_PlayerGame_Tier", "Tier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tier>("MCLModel.FK_PlayerGame_Tier", "Tier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerGame_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MCLModel.FK_PlayerGame_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MCLModel.FK_PlayerGame_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MCLModel.FK_PlayerGame_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MCLModel.FK_PlayerGame_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_Recording_PlayerMaster", "PlayerMaster")]
        public PlayerMaster PlayerMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlayerMaster>("MCLModel.FK_Recording_PlayerMaster", "PlayerMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlayerMaster>("MCLModel.FK_Recording_PlayerMaster", "PlayerMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PlayerMaster> PlayerMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlayerMaster>("MCLModel.FK_Recording_PlayerMaster", "PlayerMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PlayerMaster>("MCLModel.FK_Recording_PlayerMaster", "PlayerMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="PlayerMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayerMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayerMaster object.
        /// </summary>
        /// <param name="playerMasterId">Initial value of the PlayerMasterId property.</param>
        /// <param name="promoEnabled">Initial value of the PromoEnabled property.</param>
        public static PlayerMaster CreatePlayerMaster(global::System.Int32 playerMasterId, global::System.Boolean promoEnabled)
        {
            PlayerMaster playerMaster = new PlayerMaster();
            playerMaster.PlayerMasterId = playerMasterId;
            playerMaster.PromoEnabled = promoEnabled;
            return playerMaster;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerMasterId
        {
            get
            {
                return _PlayerMasterId;
            }
            set
            {
                if (_PlayerMasterId != value)
                {
                    OnPlayerMasterIdChanging(value);
                    ReportPropertyChanging("PlayerMasterId");
                    _PlayerMasterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayerMasterId");
                    OnPlayerMasterIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayerMasterId;
        partial void OnPlayerMasterIdChanging(global::System.Int32 value);
        partial void OnPlayerMasterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                OnPlayerIdChanging(value);
                ReportPropertyChanging("PlayerId");
                _PlayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerId");
                OnPlayerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PlayerId;
        partial void OnPlayerIdChanging(Nullable<global::System.Int32> value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                OnLeagueIdChanging(value);
                ReportPropertyChanging("LeagueId");
                _LeagueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueId");
                OnLeagueIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeagueId;
        partial void OnLeagueIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TierId
        {
            get
            {
                return _TierId;
            }
            set
            {
                OnTierIdChanging(value);
                ReportPropertyChanging("TierId");
                _TierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TierId");
                OnTierIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TierId;
        partial void OnTierIdChanging(Nullable<global::System.Int32> value);
        partial void OnTierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _Points;
        partial void OnPointsChanging(Nullable<global::System.Int32> value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalPoints
        {
            get
            {
                return _TotalPoints;
            }
            set
            {
                OnTotalPointsChanging(value);
                ReportPropertyChanging("TotalPoints");
                _TotalPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPoints");
                OnTotalPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalPoints;
        partial void OnTotalPointsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PromoEnabled
        {
            get
            {
                return _PromoEnabled;
            }
            set
            {
                OnPromoEnabledChanging(value);
                ReportPropertyChanging("PromoEnabled");
                _PromoEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromoEnabled");
                OnPromoEnabledChanged();
            }
        }
        private global::System.Boolean _PromoEnabled;
        partial void OnPromoEnabledChanging(global::System.Boolean value);
        partial void OnPromoEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPromoBlock
        {
            get
            {
                return _IsPromoBlock;
            }
            set
            {
                OnIsPromoBlockChanging(value);
                ReportPropertyChanging("IsPromoBlock");
                _IsPromoBlock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPromoBlock");
                OnIsPromoBlockChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPromoBlock;
        partial void OnIsPromoBlockChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPromoBlockChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerMaster_GamingSeason", "League")]
        public League League
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("MCLModel.FK_PlayerMaster_GamingSeason", "League").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("MCLModel.FK_PlayerMaster_GamingSeason", "League").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<League> LeagueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("MCLModel.FK_PlayerMaster_GamingSeason", "League");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<League>("MCLModel.FK_PlayerMaster_GamingSeason", "League", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerMaster_Player", "Player")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("MCLModel.FK_PlayerMaster_Player", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("MCLModel.FK_PlayerMaster_Player", "Player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("MCLModel.FK_PlayerMaster_Player", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("MCLModel.FK_PlayerMaster_Player", "Player", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_Recording_PlayerMaster", "PlayerGame")]
        public EntityCollection<PlayerGame> PlayerGames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerGame>("MCLModel.FK_Recording_PlayerMaster", "PlayerGame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerGame>("MCLModel.FK_Recording_PlayerMaster", "PlayerGame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerMaster_Tier", "Tier")]
        public Tier Tier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tier>("MCLModel.FK_PlayerMaster_Tier", "Tier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tier>("MCLModel.FK_PlayerMaster_Tier", "Tier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tier> TierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tier>("MCLModel.FK_PlayerMaster_Tier", "Tier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tier>("MCLModel.FK_PlayerMaster_Tier", "Tier", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="Rank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rank object.
        /// </summary>
        /// <param name="rankId">Initial value of the RankId property.</param>
        public static Rank CreateRank(global::System.Int32 rankId)
        {
            Rank rank = new Rank();
            rank.RankId = rankId;
            return rank;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                if (_RankId != value)
                {
                    OnRankIdChanging(value);
                    ReportPropertyChanging("RankId");
                    _RankId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RankId");
                    OnRankIdChanged();
                }
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TierPoints
        {
            get
            {
                return _TierPoints;
            }
            set
            {
                OnTierPointsChanging(value);
                ReportPropertyChanging("TierPoints");
                _TierPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TierPoints");
                OnTierPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _TierPoints;
        partial void OnTierPointsChanging(Nullable<global::System.Int32> value);
        partial void OnTierPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                OnLeagueIdChanging(value);
                ReportPropertyChanging("LeagueId");
                _LeagueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueId");
                OnLeagueIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeagueId;
        partial void OnLeagueIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _Index;
        partial void OnIndexChanging(Nullable<global::System.Int32> value);
        partial void OnIndexChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_Rank_League", "League")]
        public League League
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("MCLModel.FK_Rank_League", "League").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("MCLModel.FK_Rank_League", "League").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<League> LeagueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("MCLModel.FK_Rank_League", "League");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<League>("MCLModel.FK_Rank_League", "League", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_Tier_Rank", "Tier")]
        public EntityCollection<Tier> Tiers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tier>("MCLModel.FK_Tier_Rank", "Tier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tier>("MCLModel.FK_Tier_Rank", "Tier", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="Result")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Result : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Result object.
        /// </summary>
        /// <param name="resultId">Initial value of the ResultId property.</param>
        public static Result CreateResult(global::System.Int32 resultId)
        {
            Result result = new Result();
            result.ResultId = resultId;
            return result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultId
        {
            get
            {
                return _ResultId;
            }
            set
            {
                if (_ResultId != value)
                {
                    OnResultIdChanging(value);
                    ReportPropertyChanging("ResultId");
                    _ResultId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResultId");
                    OnResultIdChanged();
                }
            }
        }
        private global::System.Int32 _ResultId;
        partial void OnResultIdChanging(global::System.Int32 value);
        partial void OnResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerGame_Result", "PlayerGame")]
        public EntityCollection<PlayerGame> PlayerGames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerGame>("MCLModel.FK_PlayerGame_Result", "PlayerGame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerGame>("MCLModel.FK_PlayerGame_Result", "PlayerGame", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="Tier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tier object.
        /// </summary>
        /// <param name="tierId">Initial value of the TierId property.</param>
        /// <param name="rankId">Initial value of the RankId property.</param>
        public static Tier CreateTier(global::System.Int32 tierId, global::System.Int32 rankId)
        {
            Tier tier = new Tier();
            tier.TierId = tierId;
            tier.RankId = rankId;
            return tier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TierId
        {
            get
            {
                return _TierId;
            }
            set
            {
                if (_TierId != value)
                {
                    OnTierIdChanging(value);
                    ReportPropertyChanging("TierId");
                    _TierId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TierId");
                    OnTierIdChanged();
                }
            }
        }
        private global::System.Int32 _TierId;
        partial void OnTierIdChanging(global::System.Int32 value);
        partial void OnTierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                OnRankIdChanging(value);
                ReportPropertyChanging("RankId");
                _RankId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RankId");
                OnRankIdChanged();
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _Index;
        partial void OnIndexChanging(Nullable<global::System.Int32> value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TierTypeId
        {
            get
            {
                return _TierTypeId;
            }
            set
            {
                OnTierTypeIdChanging(value);
                ReportPropertyChanging("TierTypeId");
                _TierTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TierTypeId");
                OnTierTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TierTypeId;
        partial void OnTierTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnTierTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerGame_Tier", "PlayerGame")]
        public EntityCollection<PlayerGame> PlayerGames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerGame>("MCLModel.FK_PlayerGame_Tier", "PlayerGame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerGame>("MCLModel.FK_PlayerGame_Tier", "PlayerGame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerMaster_Tier", "PlayerMaster")]
        public EntityCollection<PlayerMaster> PlayerMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerMaster>("MCLModel.FK_PlayerMaster_Tier", "PlayerMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerMaster>("MCLModel.FK_PlayerMaster_Tier", "PlayerMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_Tier_Rank", "Rank")]
        public Rank Rank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("MCLModel.FK_Tier_Rank", "Rank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("MCLModel.FK_Tier_Rank", "Rank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rank> RankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("MCLModel.FK_Tier_Rank", "Rank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rank>("MCLModel.FK_Tier_Rank", "Rank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_Tier_TierType", "TierType")]
        public TierType TierType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TierType>("MCLModel.FK_Tier_TierType", "TierType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TierType>("MCLModel.FK_Tier_TierType", "TierType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TierType> TierTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TierType>("MCLModel.FK_Tier_TierType", "TierType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TierType>("MCLModel.FK_Tier_TierType", "TierType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="TierType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TierType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TierType object.
        /// </summary>
        /// <param name="tierTypeId">Initial value of the TierTypeId property.</param>
        public static TierType CreateTierType(global::System.Int32 tierTypeId)
        {
            TierType tierType = new TierType();
            tierType.TierTypeId = tierTypeId;
            return tierType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TierTypeId
        {
            get
            {
                return _TierTypeId;
            }
            set
            {
                if (_TierTypeId != value)
                {
                    OnTierTypeIdChanging(value);
                    ReportPropertyChanging("TierTypeId");
                    _TierTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TierTypeId");
                    OnTierTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _TierTypeId;
        partial void OnTierTypeIdChanging(global::System.Int32 value);
        partial void OnTierTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TierType1
        {
            get
            {
                return _TierType1;
            }
            set
            {
                OnTierType1Changing(value);
                ReportPropertyChanging("TierType1");
                _TierType1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TierType1");
                OnTierType1Changed();
            }
        }
        private global::System.String _TierType1;
        partial void OnTierType1Changing(global::System.String value);
        partial void OnTierType1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_Tier_TierType", "Tier")]
        public EntityCollection<Tier> Tiers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tier>("MCLModel.FK_Tier_TierType", "Tier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tier>("MCLModel.FK_Tier_TierType", "Tier", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static User CreateUser(global::System.Int32 userId)
        {
            User user = new User();
            user.UserId = userId;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserTypeId
        {
            get
            {
                return _UserTypeId;
            }
            set
            {
                OnUserTypeIdChanging(value);
                ReportPropertyChanging("UserTypeId");
                _UserTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserTypeId");
                OnUserTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserTypeId;
        partial void OnUserTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginId
        {
            get
            {
                return _LoginId;
            }
            set
            {
                OnLoginIdChanging(value);
                ReportPropertyChanging("LoginId");
                _LoginId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoginId");
                OnLoginIdChanged();
            }
        }
        private global::System.String _LoginId;
        partial void OnLoginIdChanging(global::System.String value);
        partial void OnLoginIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailId
        {
            get
            {
                return _EmailId;
            }
            set
            {
                OnEmailIdChanging(value);
                ReportPropertyChanging("EmailId");
                _EmailId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailId");
                OnEmailIdChanged();
            }
        }
        private global::System.String _EmailId;
        partial void OnEmailIdChanging(global::System.String value);
        partial void OnEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactNumber
        {
            get
            {
                return _ContactNumber;
            }
            set
            {
                OnContactNumberChanging(value);
                ReportPropertyChanging("ContactNumber");
                _ContactNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactNumber");
                OnContactNumberChanged();
            }
        }
        private global::System.String _ContactNumber;
        partial void OnContactNumberChanging(global::System.String value);
        partial void OnContactNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_Game_User", "Game")]
        public EntityCollection<Game> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("MCLModel.FK_Game_User", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("MCLModel.FK_Game_User", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_GamingSeason_User", "League")]
        public EntityCollection<League> Leagues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<League>("MCLModel.FK_GamingSeason_User", "League");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<League>("MCLModel.FK_GamingSeason_User", "League", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_JudgesMaster_JudgesMaster", "LeagueJudge")]
        public EntityCollection<LeagueJudge> LeagueJudges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeagueJudge>("MCLModel.FK_JudgesMaster_JudgesMaster", "LeagueJudge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeagueJudge>("MCLModel.FK_JudgesMaster_JudgesMaster", "LeagueJudge", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_PlayerGame_User", "PlayerGame")]
        public EntityCollection<PlayerGame> PlayerGames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerGame>("MCLModel.FK_PlayerGame_User", "PlayerGame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerGame>("MCLModel.FK_PlayerGame_User", "PlayerGame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_User_UserType", "UserType")]
        public UserType UserType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("MCLModel.FK_User_UserType", "UserType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("MCLModel.FK_User_UserType", "UserType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserType> UserTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("MCLModel.FK_User_UserType", "UserType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserType>("MCLModel.FK_User_UserType", "UserType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="UserType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserType object.
        /// </summary>
        /// <param name="userTypeId">Initial value of the UserTypeId property.</param>
        public static UserType CreateUserType(global::System.Int32 userTypeId)
        {
            UserType userType = new UserType();
            userType.UserTypeId = userTypeId;
            return userType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserTypeId
        {
            get
            {
                return _UserTypeId;
            }
            set
            {
                if (_UserTypeId != value)
                {
                    OnUserTypeIdChanging(value);
                    ReportPropertyChanging("UserTypeId");
                    _UserTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserTypeId");
                    OnUserTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _UserTypeId;
        partial void OnUserTypeIdChanging(global::System.Int32 value);
        partial void OnUserTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserType1
        {
            get
            {
                return _UserType1;
            }
            set
            {
                OnUserType1Changing(value);
                ReportPropertyChanging("UserType1");
                _UserType1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserType1");
                OnUserType1Changed();
            }
        }
        private global::System.String _UserType1;
        partial void OnUserType1Changing(global::System.String value);
        partial void OnUserType1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MCLModel", "FK_User_UserType", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("MCLModel.FK_User_UserType", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("MCLModel.FK_User_UserType", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="View_AllGames")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_AllGames : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new View_AllGames object.
        /// </summary>
        /// <param name="playerGameId">Initial value of the PlayerGameId property.</param>
        /// <param name="gameRankId">Initial value of the GameRankId property.</param>
        /// <param name="currentRankId">Initial value of the CurrentRankId property.</param>
        /// <param name="promoEnabled">Initial value of the PromoEnabled property.</param>
        public static View_AllGames CreateView_AllGames(global::System.Int32 playerGameId, global::System.Int32 gameRankId, global::System.Int32 currentRankId, global::System.Boolean promoEnabled)
        {
            View_AllGames view_AllGames = new View_AllGames();
            view_AllGames.PlayerGameId = playerGameId;
            view_AllGames.GameRankId = gameRankId;
            view_AllGames.CurrentRankId = currentRankId;
            view_AllGames.PromoEnabled = promoEnabled;
            return view_AllGames;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerGameId
        {
            get
            {
                return _PlayerGameId;
            }
            set
            {
                if (_PlayerGameId != value)
                {
                    OnPlayerGameIdChanging(value);
                    ReportPropertyChanging("PlayerGameId");
                    _PlayerGameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlayerGameId");
                    OnPlayerGameIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayerGameId;
        partial void OnPlayerGameIdChanging(global::System.Int32 value);
        partial void OnPlayerGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlayerMasterId
        {
            get
            {
                return _PlayerMasterId;
            }
            set
            {
                OnPlayerMasterIdChanging(value);
                ReportPropertyChanging("PlayerMasterId");
                _PlayerMasterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerMasterId");
                OnPlayerMasterIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PlayerMasterId;
        partial void OnPlayerMasterIdChanging(Nullable<global::System.Int32> value);
        partial void OnPlayerMasterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecordingFileName
        {
            get
            {
                return _RecordingFileName;
            }
            set
            {
                OnRecordingFileNameChanging(value);
                ReportPropertyChanging("RecordingFileName");
                _RecordingFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecordingFileName");
                OnRecordingFileNameChanged();
            }
        }
        private global::System.String _RecordingFileName;
        partial void OnRecordingFileNameChanging(global::System.String value);
        partial void OnRecordingFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GameStartTime
        {
            get
            {
                return _GameStartTime;
            }
            set
            {
                OnGameStartTimeChanging(value);
                ReportPropertyChanging("GameStartTime");
                _GameStartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameStartTime");
                OnGameStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _GameStartTime;
        partial void OnGameStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnGameStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GameEndTime
        {
            get
            {
                return _GameEndTime;
            }
            set
            {
                OnGameEndTimeChanging(value);
                ReportPropertyChanging("GameEndTime");
                _GameEndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameEndTime");
                OnGameEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _GameEndTime;
        partial void OnGameEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnGameEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                OnGameIdChanging(value);
                ReportPropertyChanging("GameId");
                _GameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameId");
                OnGameIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GameId;
        partial void OnGameIdChanging(Nullable<global::System.Int32> value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Game
        {
            get
            {
                return _Game;
            }
            set
            {
                OnGameChanging(value);
                ReportPropertyChanging("Game");
                _Game = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Game");
                OnGameChanged();
            }
        }
        private global::System.String _Game;
        partial void OnGameChanging(global::System.String value);
        partial void OnGameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GameTierId
        {
            get
            {
                return _GameTierId;
            }
            set
            {
                OnGameTierIdChanging(value);
                ReportPropertyChanging("GameTierId");
                _GameTierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameTierId");
                OnGameTierIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GameTierId;
        partial void OnGameTierIdChanging(Nullable<global::System.Int32> value);
        partial void OnGameTierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GameTier
        {
            get
            {
                return _GameTier;
            }
            set
            {
                OnGameTierChanging(value);
                ReportPropertyChanging("GameTier");
                _GameTier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GameTier");
                OnGameTierChanged();
            }
        }
        private global::System.String _GameTier;
        partial void OnGameTierChanging(global::System.String value);
        partial void OnGameTierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GameTierTypeId
        {
            get
            {
                return _GameTierTypeId;
            }
            set
            {
                OnGameTierTypeIdChanging(value);
                ReportPropertyChanging("GameTierTypeId");
                _GameTierTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameTierTypeId");
                OnGameTierTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GameTierTypeId;
        partial void OnGameTierTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnGameTierTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameRankId
        {
            get
            {
                return _GameRankId;
            }
            set
            {
                if (_GameRankId != value)
                {
                    OnGameRankIdChanging(value);
                    ReportPropertyChanging("GameRankId");
                    _GameRankId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameRankId");
                    OnGameRankIdChanged();
                }
            }
        }
        private global::System.Int32 _GameRankId;
        partial void OnGameRankIdChanging(global::System.Int32 value);
        partial void OnGameRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GameTierType
        {
            get
            {
                return _GameTierType;
            }
            set
            {
                OnGameTierTypeChanging(value);
                ReportPropertyChanging("GameTierType");
                _GameTierType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GameTierType");
                OnGameTierTypeChanged();
            }
        }
        private global::System.String _GameTierType;
        partial void OnGameTierTypeChanging(global::System.String value);
        partial void OnGameTierTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GameRank
        {
            get
            {
                return _GameRank;
            }
            set
            {
                OnGameRankChanging(value);
                ReportPropertyChanging("GameRank");
                _GameRank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GameRank");
                OnGameRankChanged();
            }
        }
        private global::System.String _GameRank;
        partial void OnGameRankChanging(global::System.String value);
        partial void OnGameRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GameResultId
        {
            get
            {
                return _GameResultId;
            }
            set
            {
                OnGameResultIdChanging(value);
                ReportPropertyChanging("GameResultId");
                _GameResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameResultId");
                OnGameResultIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GameResultId;
        partial void OnGameResultIdChanging(Nullable<global::System.Int32> value);
        partial void OnGameResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GameResult
        {
            get
            {
                return _GameResult;
            }
            set
            {
                OnGameResultChanging(value);
                ReportPropertyChanging("GameResult");
                _GameResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GameResult");
                OnGameResultChanged();
            }
        }
        private global::System.String _GameResult;
        partial void OnGameResultChanging(global::System.String value);
        partial void OnGameResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GamePoints
        {
            get
            {
                return _GamePoints;
            }
            set
            {
                OnGamePointsChanging(value);
                ReportPropertyChanging("GamePoints");
                _GamePoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GamePoints");
                OnGamePointsChanged();
            }
        }
        private Nullable<global::System.Int32> _GamePoints;
        partial void OnGamePointsChanging(Nullable<global::System.Int32> value);
        partial void OnGamePointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsMarked
        {
            get
            {
                return _IsMarked;
            }
            set
            {
                OnIsMarkedChanging(value);
                ReportPropertyChanging("IsMarked");
                _IsMarked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMarked");
                OnIsMarkedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsMarked;
        partial void OnIsMarkedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsMarkedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MarkedById
        {
            get
            {
                return _MarkedById;
            }
            set
            {
                OnMarkedByIdChanging(value);
                ReportPropertyChanging("MarkedById");
                _MarkedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarkedById");
                OnMarkedByIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MarkedById;
        partial void OnMarkedByIdChanging(Nullable<global::System.Int32> value);
        partial void OnMarkedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MarkedByFName
        {
            get
            {
                return _MarkedByFName;
            }
            set
            {
                OnMarkedByFNameChanging(value);
                ReportPropertyChanging("MarkedByFName");
                _MarkedByFName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MarkedByFName");
                OnMarkedByFNameChanged();
            }
        }
        private global::System.String _MarkedByFName;
        partial void OnMarkedByFNameChanging(global::System.String value);
        partial void OnMarkedByFNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MarkedByLName
        {
            get
            {
                return _MarkedByLName;
            }
            set
            {
                OnMarkedByLNameChanging(value);
                ReportPropertyChanging("MarkedByLName");
                _MarkedByLName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MarkedByLName");
                OnMarkedByLNameChanged();
            }
        }
        private global::System.String _MarkedByLName;
        partial void OnMarkedByLNameChanging(global::System.String value);
        partial void OnMarkedByLNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConsoleName
        {
            get
            {
                return _ConsoleName;
            }
            set
            {
                OnConsoleNameChanging(value);
                ReportPropertyChanging("ConsoleName");
                _ConsoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConsoleName");
                OnConsoleNameChanged();
            }
        }
        private global::System.String _ConsoleName;
        partial void OnConsoleNameChanging(global::System.String value);
        partial void OnConsoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MarkedAt
        {
            get
            {
                return _MarkedAt;
            }
            set
            {
                OnMarkedAtChanging(value);
                ReportPropertyChanging("MarkedAt");
                _MarkedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarkedAt");
                OnMarkedAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _MarkedAt;
        partial void OnMarkedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnMarkedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                OnPlayerIdChanging(value);
                ReportPropertyChanging("PlayerId");
                _PlayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerId");
                OnPlayerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PlayerId;
        partial void OnPlayerIdChanging(Nullable<global::System.Int32> value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlayerName
        {
            get
            {
                return _PlayerName;
            }
            set
            {
                OnPlayerNameChanging(value);
                ReportPropertyChanging("PlayerName");
                _PlayerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlayerName");
                OnPlayerNameChanged();
            }
        }
        private global::System.String _PlayerName;
        partial void OnPlayerNameChanging(global::System.String value);
        partial void OnPlayerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                OnLeagueIdChanging(value);
                ReportPropertyChanging("LeagueId");
                _LeagueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueId");
                OnLeagueIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeagueId;
        partial void OnLeagueIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String League
        {
            get
            {
                return _League;
            }
            set
            {
                OnLeagueChanging(value);
                ReportPropertyChanging("League");
                _League = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("League");
                OnLeagueChanged();
            }
        }
        private global::System.String _League;
        partial void OnLeagueChanging(global::System.String value);
        partial void OnLeagueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentTierId
        {
            get
            {
                return _CurrentTierId;
            }
            set
            {
                OnCurrentTierIdChanging(value);
                ReportPropertyChanging("CurrentTierId");
                _CurrentTierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentTierId");
                OnCurrentTierIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentTierId;
        partial void OnCurrentTierIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentTierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentTier
        {
            get
            {
                return _CurrentTier;
            }
            set
            {
                OnCurrentTierChanging(value);
                ReportPropertyChanging("CurrentTier");
                _CurrentTier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentTier");
                OnCurrentTierChanged();
            }
        }
        private global::System.String _CurrentTier;
        partial void OnCurrentTierChanging(global::System.String value);
        partial void OnCurrentTierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrentRankId
        {
            get
            {
                return _CurrentRankId;
            }
            set
            {
                if (_CurrentRankId != value)
                {
                    OnCurrentRankIdChanging(value);
                    ReportPropertyChanging("CurrentRankId");
                    _CurrentRankId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CurrentRankId");
                    OnCurrentRankIdChanged();
                }
            }
        }
        private global::System.Int32 _CurrentRankId;
        partial void OnCurrentRankIdChanging(global::System.Int32 value);
        partial void OnCurrentRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentRank
        {
            get
            {
                return _CurrentRank;
            }
            set
            {
                OnCurrentRankChanging(value);
                ReportPropertyChanging("CurrentRank");
                _CurrentRank = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentRank");
                OnCurrentRankChanged();
            }
        }
        private global::System.String _CurrentRank;
        partial void OnCurrentRankChanging(global::System.String value);
        partial void OnCurrentRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentRankTierPoints
        {
            get
            {
                return _CurrentRankTierPoints;
            }
            set
            {
                OnCurrentRankTierPointsChanging(value);
                ReportPropertyChanging("CurrentRankTierPoints");
                _CurrentRankTierPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentRankTierPoints");
                OnCurrentRankTierPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentRankTierPoints;
        partial void OnCurrentRankTierPointsChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentRankTierPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentTierTypeId
        {
            get
            {
                return _CurrentTierTypeId;
            }
            set
            {
                OnCurrentTierTypeIdChanging(value);
                ReportPropertyChanging("CurrentTierTypeId");
                _CurrentTierTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentTierTypeId");
                OnCurrentTierTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentTierTypeId;
        partial void OnCurrentTierTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentTierTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentTierType
        {
            get
            {
                return _CurrentTierType;
            }
            set
            {
                OnCurrentTierTypeChanging(value);
                ReportPropertyChanging("CurrentTierType");
                _CurrentTierType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentTierType");
                OnCurrentTierTypeChanged();
            }
        }
        private global::System.String _CurrentTierType;
        partial void OnCurrentTierTypeChanging(global::System.String value);
        partial void OnCurrentTierTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentRankIndex
        {
            get
            {
                return _CurrentRankIndex;
            }
            set
            {
                OnCurrentRankIndexChanging(value);
                ReportPropertyChanging("CurrentRankIndex");
                _CurrentRankIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentRankIndex");
                OnCurrentRankIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentRankIndex;
        partial void OnCurrentRankIndexChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentRankIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _Points;
        partial void OnPointsChanging(Nullable<global::System.Int32> value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalPoints
        {
            get
            {
                return _TotalPoints;
            }
            set
            {
                OnTotalPointsChanging(value);
                ReportPropertyChanging("TotalPoints");
                _TotalPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPoints");
                OnTotalPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalPoints;
        partial void OnTotalPointsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PromoEnabled
        {
            get
            {
                return _PromoEnabled;
            }
            set
            {
                if (_PromoEnabled != value)
                {
                    OnPromoEnabledChanging(value);
                    ReportPropertyChanging("PromoEnabled");
                    _PromoEnabled = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PromoEnabled");
                    OnPromoEnabledChanged();
                }
            }
        }
        private global::System.Boolean _PromoEnabled;
        partial void OnPromoEnabledChanging(global::System.Boolean value);
        partial void OnPromoEnabledChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="View_AllJudges")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_AllJudges : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new View_AllJudges object.
        /// </summary>
        /// <param name="leagueJudgeId">Initial value of the LeagueJudgeId property.</param>
        public static View_AllJudges CreateView_AllJudges(global::System.Int32 leagueJudgeId)
        {
            View_AllJudges view_AllJudges = new View_AllJudges();
            view_AllJudges.LeagueJudgeId = leagueJudgeId;
            return view_AllJudges;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueJudgeId
        {
            get
            {
                return _LeagueJudgeId;
            }
            set
            {
                if (_LeagueJudgeId != value)
                {
                    OnLeagueJudgeIdChanging(value);
                    ReportPropertyChanging("LeagueJudgeId");
                    _LeagueJudgeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeagueJudgeId");
                    OnLeagueJudgeIdChanged();
                }
            }
        }
        private global::System.Int32 _LeagueJudgeId;
        partial void OnLeagueJudgeIdChanging(global::System.Int32 value);
        partial void OnLeagueJudgeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserTypeId
        {
            get
            {
                return _UserTypeId;
            }
            set
            {
                OnUserTypeIdChanging(value);
                ReportPropertyChanging("UserTypeId");
                _UserTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserTypeId");
                OnUserTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserTypeId;
        partial void OnUserTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginId
        {
            get
            {
                return _LoginId;
            }
            set
            {
                OnLoginIdChanging(value);
                ReportPropertyChanging("LoginId");
                _LoginId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoginId");
                OnLoginIdChanged();
            }
        }
        private global::System.String _LoginId;
        partial void OnLoginIdChanging(global::System.String value);
        partial void OnLoginIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                OnLeagueIdChanging(value);
                ReportPropertyChanging("LeagueId");
                _LeagueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueId");
                OnLeagueIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeagueId;
        partial void OnLeagueIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String League
        {
            get
            {
                return _League;
            }
            set
            {
                OnLeagueChanging(value);
                ReportPropertyChanging("League");
                _League = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("League");
                OnLeagueChanged();
            }
        }
        private global::System.String _League;
        partial void OnLeagueChanging(global::System.String value);
        partial void OnLeagueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                OnGameIdChanging(value);
                ReportPropertyChanging("GameId");
                _GameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameId");
                OnGameIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GameId;
        partial void OnGameIdChanging(Nullable<global::System.Int32> value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Game
        {
            get
            {
                return _Game;
            }
            set
            {
                OnGameChanging(value);
                ReportPropertyChanging("Game");
                _Game = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Game");
                OnGameChanged();
            }
        }
        private global::System.String _Game;
        partial void OnGameChanging(global::System.String value);
        partial void OnGameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeagueMasterId
        {
            get
            {
                return _LeagueMasterId;
            }
            set
            {
                OnLeagueMasterIdChanging(value);
                ReportPropertyChanging("LeagueMasterId");
                _LeagueMasterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeagueMasterId");
                OnLeagueMasterIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeagueMasterId;
        partial void OnLeagueMasterIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeagueMasterIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MCLModel", Name="View_AllLegueRules")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_AllLegueRules : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new View_AllLegueRules object.
        /// </summary>
        /// <param name="leagueId">Initial value of the LeagueId property.</param>
        /// <param name="leagueMasterId">Initial value of the LeagueMasterId property.</param>
        public static View_AllLegueRules CreateView_AllLegueRules(global::System.Int32 leagueId, global::System.Int32 leagueMasterId)
        {
            View_AllLegueRules view_AllLegueRules = new View_AllLegueRules();
            view_AllLegueRules.LeagueId = leagueId;
            view_AllLegueRules.LeagueMasterId = leagueMasterId;
            return view_AllLegueRules;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                if (_LeagueId != value)
                {
                    OnLeagueIdChanging(value);
                    ReportPropertyChanging("LeagueId");
                    _LeagueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeagueId");
                    OnLeagueIdChanged();
                }
            }
        }
        private global::System.Int32 _LeagueId;
        partial void OnLeagueIdChanging(global::System.Int32 value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueMasterId
        {
            get
            {
                return _LeagueMasterId;
            }
            set
            {
                if (_LeagueMasterId != value)
                {
                    OnLeagueMasterIdChanging(value);
                    ReportPropertyChanging("LeagueMasterId");
                    _LeagueMasterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeagueMasterId");
                    OnLeagueMasterIdChanged();
                }
            }
        }
        private global::System.Int32 _LeagueMasterId;
        partial void OnLeagueMasterIdChanging(global::System.Int32 value);
        partial void OnLeagueMasterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                OnGameIdChanging(value);
                ReportPropertyChanging("GameId");
                _GameId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameId");
                OnGameIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GameId;
        partial void OnGameIdChanging(Nullable<global::System.Int32> value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WinPoints
        {
            get
            {
                return _WinPoints;
            }
            set
            {
                OnWinPointsChanging(value);
                ReportPropertyChanging("WinPoints");
                _WinPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WinPoints");
                OnWinPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _WinPoints;
        partial void OnWinPointsChanging(Nullable<global::System.Int32> value);
        partial void OnWinPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LoosePoints
        {
            get
            {
                return _LoosePoints;
            }
            set
            {
                OnLoosePointsChanging(value);
                ReportPropertyChanging("LoosePoints");
                _LoosePoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoosePoints");
                OnLoosePointsChanged();
            }
        }
        private Nullable<global::System.Int32> _LoosePoints;
        partial void OnLoosePointsChanging(Nullable<global::System.Int32> value);
        partial void OnLoosePointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TiePoints
        {
            get
            {
                return _TiePoints;
            }
            set
            {
                OnTiePointsChanging(value);
                ReportPropertyChanging("TiePoints");
                _TiePoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TiePoints");
                OnTiePointsChanged();
            }
        }
        private Nullable<global::System.Int32> _TiePoints;
        partial void OnTiePointsChanging(Nullable<global::System.Int32> value);
        partial void OnTiePointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvalidPoints
        {
            get
            {
                return _InvalidPoints;
            }
            set
            {
                OnInvalidPointsChanging(value);
                ReportPropertyChanging("InvalidPoints");
                _InvalidPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvalidPoints");
                OnInvalidPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _InvalidPoints;
        partial void OnInvalidPointsChanging(Nullable<global::System.Int32> value);
        partial void OnInvalidPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaximumGamePlayTime
        {
            get
            {
                return _MaximumGamePlayTime;
            }
            set
            {
                OnMaximumGamePlayTimeChanging(value);
                ReportPropertyChanging("MaximumGamePlayTime");
                _MaximumGamePlayTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaximumGamePlayTime");
                OnMaximumGamePlayTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _MaximumGamePlayTime;
        partial void OnMaximumGamePlayTimeChanging(Nullable<global::System.Int32> value);
        partial void OnMaximumGamePlayTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GameTitle
        {
            get
            {
                return _GameTitle;
            }
            set
            {
                OnGameTitleChanging(value);
                ReportPropertyChanging("GameTitle");
                _GameTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GameTitle");
                OnGameTitleChanged();
            }
        }
        private global::System.String _GameTitle;
        partial void OnGameTitleChanging(global::System.String value);
        partial void OnGameTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIdChanged();

        #endregion

    
    }

    #endregion

    
}
